name: linter-tests
on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: "Github environment to deploy to"
        required: true

defaults:
  run:
    shell: bash

jobs:
  linter-and-tests:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Run project linter
        run: if [ -f "./cli/lint.sh" ]; then chmod +x ./cli/lint.sh; ./cli/lint.sh --cicd; else echo "No lint.sh file found."; fi
      
      - name: Run unit tests
        run: if [ -f "./cli/test.sh" ]; then chmod +x ./cli/test.sh; ./cli/test.sh --unit --cicd; else echo "No test.sh file found."; fi

      - name: Run integration tests
        env:
          ${{ insert }}: ${{ vars }}
          ${{ insert }}: ${{ secrets }}
        run: if [ -f "./cli/test.sh" ]; then chmod +x ./cli/test.sh; ./cli/test.sh --integration --cicd; else echo "No test.sh file found."; fi

      - name: Run E2E tests
        env:
          ${{ insert }}: ${{ vars }}
          ${{ insert }}: ${{ secrets }}
        run: if [ -f "./cli/test.sh" ]; then chmod +x ./cli/test.sh; ./cli/test.sh --e2e --cicd; else echo "No test.sh file found."; fi

      - name: Detect if SONAR_TOKEN is present
        id: detect-sonar
        run: >-
          if [ -n "${{ secrets.sonar_token }}" ]; then
            echo "Sonar token is set"
            echo "has_sonar=true" >> $GITHUB_OUTPUT
          else
            echo "Sonar token is NOT set"
            echo "has_sonar=false" >> $GITHUB_OUTPUT
          fi

      - name: Begin SonarCloud analysis
        if: ${{ steps.detect-sonar.outputs.has_sonar == 'true' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJ_KEY: ${{ vars.SONAR_PROJ_KEY }}
          SONAR_ORG: ${{ vars.SONAR_ORG }}
          SONAR_HOST: ${{ vars.SONAR_HOST }}
          TEST_COVERAGE_DIR_PATH: ${{ vars.TEST_COVERAGE_DIR_PATH }}
          TEST_COVERAGE_FILE_NAME: ${{ vars.TEST_COVERAGE_FILE_NAME }}
        run: if [ -f "./cli/sonar.sh" ]; then chmod +x ./cli/sonar.sh; ./cli/sonar.sh --cicd --start; else echo "No sonar.sh file found."; fi

      - name: Run test coverage
        env:
          TEST_COVERAGE_DIR_PATH: ${{ vars.TEST_COVERAGE_DIR_PATH }}
          TEST_COVERAGE_FILE_NAME: ${{ vars.TEST_COVERAGE_FILE_NAME }}
        run: if [ -f "./cli/coverage.sh" ]; then chmod +x ./cli/coverage.sh; ./cli/coverage.sh --cicd; else echo "No coverage.sh file found."; fi

      - name: End SonarCloud analysis
        if: ${{ steps.detect-sonar.outputs.has_sonar == 'true' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: if [ -f "./cli/sonar.sh" ]; then chmod +x ./cli/sonar.sh; ./cli/sonar.sh --cicd --end; else echo "No sonar.sh file found."; fi
